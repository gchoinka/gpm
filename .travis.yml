#
# Copyright: 2018 Gerard Choinka (gerard.choinka@gmail.com)
#
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE_1_0.txt or
# copy at http://www.boost.org/LICENSE_1_0.txt)
#

language: cpp
os: linux
dist: trusty
sudo: false

cache:
  apt: true
  directories:
    - /home/travis/.hunter

matrix:
  include:
    - env: CLANG_VERS="7" CXXCOMPILER="clang++-7" CCOMPILER="clang-7"
      addons: &default_addons
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-7 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages: [ "clang-7", "llvm-7-dev", "g++-8", "ninja-build", "xz-utils"]
    - env: CMAKE_BUILD_TYPE=Debug CXXCOMPILER=/home/travis/opt/gcc-install/bin/g++ CCOMPILER=/home/travis/opt/gcc-install/bin/gcc
      addons: *default_addons
    - env: CMAKE_BUILD_TYPE=Release CXXCOMPILER=/home/travis/opt/gcc-install/bin/g++ CCOMPILER=/home/travis/opt/gcc-install/bin/gcc
      addons: *default_addons
      #- env: CMAKE_BUILD_TYPE=Debug CXXCOMPILER=g++-8 CMAKE_CXX_FLAGS="-fsanitize=address -fno-omit-frame-pointer" CMAKE_EXE_LINKER_FLAGS="-fsanitize=address -fuse-ld=gold" CCOMPILER=gcc-8
      #  addons: *default_addons
    - env: CMAKE_BUILD_TYPE=Debug CXXCOMPILER=clang++-7 CMAKE_CXX_FLAGS="-fsanitize=undefined -fno-omit-frame-pointer" CMAKE_EXE_LINKER_FLAGS="-fsanitize=undefined" CLANG_VERS="7" CCOMPILER=clang-7 
      addons: *default_addons
    - env: CMAKE_BUILD_TYPE=Release CXXCOMPILER=clang++-7 CCOMPILER=clang-7 CLANG_VERS="7"
      addons: *default_addons


script:
  - wget "https://github.com/gchoinka/gpm/releases/download/v0.2.0/home_travis_opt_gcc-install.tar.xz" -O /home/travis/opt/gcc-install.tar.xz
  - tar xf /home/travis/opt/gcc-install.tar.xz -C /home/travis/opt/
  - export PATH=/usr/lib/llvm-${CLANG_VERS}/bin/:${PATH}
  - export ASAN_OPTIONS=symbolize=1
  - export LSAN_OPTIONS=verbosity=1:log_threads=1
  - |
    mkdir build
    cd build
    cmake .. -GNinja \
      -DCMAKE_CXX_COMPILER="${CXXCOMPILER}" \
      -DCMAKE_C_COMPILER="${CCCOMPILER}" \
      -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} \
      -DCMAKE_CXX_FLAGS="${CMAKE_CXX_FLAGS}" \
      -DCMAKE_EXE_LINKER_FLAGS="${CMAKE_EXE_LINKER_FLAGS}" 
  - cmake --build . -- -j2 
  - ctest --output-on-failure -VV        
  - cmake --build . --target run_tree_benchmark
