#
# Copyright: 2018 Gerard Choinka (gerard.choinka@gmail.com)
#
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE_1_0.txt or
# copy at http://www.boost.org/LICENSE_1_0.txt)
#

language: cpp
os: linux
dist: trusty
sudo: false

matrix:
  include:
    - env: CLANG_VERS="6.0" CXXCOMPILER="clang++-6.0" CCOMPILER="clang-6.0"
      addons: &default_addons
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-6.0 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages: [ "clang-6.0", "llvm-6.0-dev", "g++-8", "ninja-build"]
    - env: CXXCOMPILER=g++-8 CCOMPILER=gcc-8
      addons: *default_addons
    - env: CXXCOMPILER=clang++-6.0 CCOMPILER=clang-6.0 CMAKE_CXX_FLAGS="-fsanitize=address -fno-omit-frame-pointer" CMAKE_EXE_LINKER_FLAGS="-fsanitize=address"
      addons: *default_addons
    #- env: CXXCOMPILER=clang++-6.0 CCOMPILER=clang-6.0 CMAKE_CXX_FLAGS="-fsanitize=memory -fno-omit-frame-pointer" CMAKE_EXE_LINKER_FLAGS="-fsanitize=memory"
    #  addons: *default_addons
    - env: CXXCOMPILER=clang++-6.0 CCOMPILER=clang-6.0 CMAKE_CXX_FLAGS="-fsanitize=undefined -fno-omit-frame-pointer" CMAKE_EXE_LINKER_FLAGS="-fsanitize=undefined"
      addons: *default_addons
      
#LSAN_OPTIONS=verbosity=1:log_threads=1
#ASAN_OPTIONS=symbolize=1
#

script:
  - export ASAN_SYMBOLIZER_PATH=/usr/bin/llvm-symbolizer-${CLANG_VERS}
  - export MSAN_SYMBOLIZER_PATH=/usr/bin/llvm-symbolizer-${CLANG_VERS}
  - export USAN_SYMBOLIZER_PATH=/usr/bin/llvm-symbolizer-${CLANG_VERS}
  - echo ${USAN_SYMBOLIZER_PATH}
  - export ASAN_OPTIONS=symbolize=1
  - |
    cmake . -GNinja \
      -DCMAKE_CXX_COMPILER="${CXXCOMPILER}" \
      -DCMAKE_C_COMPILER="${CCCOMPILER}" \
      -DCMAKE_BUILD_TYPE=Debug \
      -DCMAKE_CXX_FLAGS="${CMAKE_CXX_FLAGS}" \
      -DCMAKE_EXE_LINKER_FLAGS="${CMAKE_EXE_LINKER_FLAGS}" 
  - cmake --build . -- -j2 
  - ctest --output-on-failure -VV        

